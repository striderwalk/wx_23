# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sine.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import time
from PyQt5 import QtCore, QtGui, QtWidgets

from matplotlib.backends.backend_qt5agg import FigureCanvas, NavigationToolbar2QT

from matplotlib.figure import Figure
import numpy as np


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")

        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        hbox = QtWidgets.QHBoxLayout(self.centralwidget)

        self.centralwidget.setObjectName("centralwidget")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        # add the graph?
        self.fig = Figure(figsize=[9, 3])
        self.static_canvas = FigureCanvas(self.fig)
        self.toolbar = NavigationToolbar2QT(self.static_canvas)

        self.chart_vbox = QtWidgets.QVBoxLayout(self.centralwidget)
        self.chart_vbox.addWidget(self.static_canvas)
        self.chart_vbox.setGeometry(QtCore.QRect(20, 10, 301, 251))
        self.chart_vbox.setObjectName("graph")

        self.chart_vbox.addWidget(self.toolbar)

        # add the button
        self.draw_sine = QtWidgets.QPushButton(self.centralwidget)
        self.draw_sine.setGeometry(QtCore.QRect(400, 300, 93, 28))
        self.draw_sine.setAutoFillBackground(True)
        self.draw_sine.setAutoDefault(False)
        self.draw_sine.setDefault(False)
        self.draw_sine.setObjectName("up")

        buttons = QtWidgets.QVBoxLayout()
        buttons.addWidget(self.draw_sine)

        hbox.addLayout(self.chart_vbox)
        hbox.addLayout(buttons)

        self.retranslateUi(MainWindow)

        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.draw_sine.clicked.connect(self.plot_sine_wave)

        timer = QtCore.QTimer(MainWindow)
        timer.timeout.connect(self.plot_sine_wave)
        timer.start()

    def plot_sine_wave(self):
        offset = time.time()
        # print("i is plotting")
        self.fig.clear()
        self.fig.subplots_adjust(top=0.925, bottom=0.13, left=0.085, right=0.95)
        self.ax = self.fig.add_subplot(111)
        values = [i / 100 + offset for i in range(0, 10000)]
        self.ax.plot(np.sin(values))
        self.static_canvas.draw()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    app.exec()
